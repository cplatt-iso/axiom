# Dockerfile.worker

# Use an official Python runtime as a parent image
FROM python:3.11-slim

# --- System Dependencies ---
# Install build tools, mysql client, and now Java + unzip for dcm4che
RUN apt-get update && apt-get install -y --no-install-recommends \
    build-essential \
    default-libmysqlclient-dev \
    openjdk-21-jre-headless \
    unzip \
    curl \
    && rm -rf /var/lib/apt/lists/*

# --- Install dcm4che tools ---
# This adds a layer to the image but makes the robust storescu tool available.
ARG DCM4CHE_VERSION=5.30.0
RUN curl -fsSL "https://sourceforge.net/projects/dcm4che/files/dcm4che3/${DCM4CHE_VERSION}/dcm4che-${DCM4CHE_VERSION}-bin.zip/download" -o /tmp/dcm4che.zip \
    && unzip /tmp/dcm4che.zip -d /opt \
    && rm /tmp/dcm4che.zip
ENV PATH="/opt/dcm4che-${DCM4CHE_VERSION}/bin:${PATH}"
# --- End dcm4che install ---


RUN python --version
RUN pip --version

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE 1
ENV PYTHONUNBUFFERED 1
ENV PIP_NO_CACHE_DIR=off \
    PIP_DISABLE_PIP_VERSION_CHECK=on

# Set work directory
WORKDIR /app

# Copy requirements file
COPY requirements.txt .

# Install dependencies
RUN --mount=type=cache,target=/root/.cache \
    pip install --no-cache-dir -r requirements.txt

# Copy project code
COPY ./app /app/app

# Command to run the Celery worker
CMD ["celery", "-A", "app.worker.celery_app.app", "worker", "--loglevel=info", "-Q", "default", "-c", "4"]
