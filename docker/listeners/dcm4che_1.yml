services:
  axiom-dcm4che-listener:
    build:
      context: .
      dockerfile: docker/dockerfiles/Dockerfile.dcm4che-listener
    container_name: axiom-dcm4che-listener
    env_file:
      - ./.env
    environment:
      - AXIOM_INSTANCE_ID=dcm4che_1
      - AXIOM_AETITLE=DCM4CHE
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-guest}
      - RABBITMQ_QUEUE=rules_engine_intake
      - PYTHONPATH=/app
    ports:
      - "11114:11114"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - dicom_incoming:/dicom_data/incoming
      - dicom_dustbin:/dicom_data/dustbin
      - ./scripts:/app/scripts:ro
    command: ["/bin/bash", "-c", "python /app/scripts/structured_storescp.py & python /app/scripts/batching_listener.py --watch-dirs; wait"]
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.dcm4che-listener.{{.Name}}"