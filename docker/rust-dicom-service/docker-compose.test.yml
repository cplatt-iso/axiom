version: '3.8'

services:
  # Enhanced Rust DICOM Service
  rust-dicom-enhanced:
    image: axiom-rust-dicom-enhanced
    container_name: axiom-rust-dicom-enhanced
    environment:
      - RUST_LOG=info
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_PORT=5672
      - RABBITMQ_USER=guest
      - RABBITMQ_PASSWORD=guest
      - RABBITMQ_QUEUE=rules_engine_intake
      - DICOM_INCOMING_DIR=/dicom_data/incoming
      - DICOM_DUSTBIN_DIR=/dicom_data/dustbin
      - API_BASE_URL=http://backend:8000
      - API_KEY=${API_KEY:-}
      - STUDY_INACTIVITY_TIMEOUT=5
      - HEARTBEAT_INTERVAL=30
      - DATABASE_URL=postgresql://postgres:${POSTGRES_PASSWORD:-password}@postgres:5432/axiom
      - CELERY_TASK_NAME=app.worker.rules_engine.process_dicom_file
    ports:
      - "11113:11112"  # Different port to avoid conflicts
    volumes:
      - rust_dicom_data:/dicom_data
    networks:
      - axiom-network
    depends_on:
      - rabbitmq
      - postgres
    restart: unless-stopped
    
  # RabbitMQ for message queuing
  rabbitmq:
    image: rabbitmq:3.12-management
    container_name: axiom-rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=guest
      - RABBITMQ_DEFAULT_PASS=guest
    ports:
      - "5672:5672"
      - "15672:15672"  # Management UI
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - axiom-network
    restart: unless-stopped

  # PostgreSQL database
  postgres:
    image: postgres:15-alpine
    container_name: axiom-postgres
    environment:
      - POSTGRES_DB=axiom
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-password}
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - axiom-network
    restart: unless-stopped

  # Mock backend API for testing
  mock-backend:
    image: nginx:alpine
    container_name: axiom-mock-backend
    ports:
      - "8000:80"
    volumes:
      - ./mock-api.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - axiom-network
    restart: unless-stopped

volumes:
  rust_dicom_data:
  rabbitmq_data:
  postgres_data:

networks:
  axiom-network:
    driver: bridge
