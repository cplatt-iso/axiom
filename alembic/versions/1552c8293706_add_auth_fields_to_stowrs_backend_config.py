"""add_auth_fields_to_stowrs_backend_config

Revision ID: 1552c8293706
Revises: c99f6871469b 
Create Date: 2025-05-23 04:48:36.789073

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '1552c8293706'
down_revision: Union[str, None] = 'c99f6871469b' # Make sure this is correct
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None

TABLE_NAME = 'storage_backend_configs'

def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(TABLE_NAME, sa.Column('auth_type', sa.String(length=50), nullable=True, comment="Authentication type for the STOW-RS endpoint."))
    op.add_column(TABLE_NAME, sa.Column('basic_auth_username_secret_name', sa.String(length=512), nullable=True, comment="GCP Secret Manager name for Basic Auth username. Required if auth_type is 'basic'."))
    op.add_column(TABLE_NAME, sa.Column('basic_auth_password_secret_name', sa.String(length=512), nullable=True, comment="GCP Secret Manager name for Basic Auth password. Required if auth_type is 'basic'."))
    op.add_column(TABLE_NAME, sa.Column('bearer_token_secret_name', sa.String(length=512), nullable=True, comment="GCP Secret Manager name for Bearer token. Required if auth_type is 'bearer'."))
    op.add_column(TABLE_NAME, sa.Column('api_key_secret_name', sa.String(length=512), nullable=True, comment="GCP Secret Manager name for the API key. Required if auth_type is 'apikey'."))
    op.add_column(TABLE_NAME, sa.Column('api_key_header_name_override', sa.String(length=100), nullable=True, comment="Header name for the API key (e.g., 'X-API-Key'). Required if auth_type is 'apikey'."))
    
    # tls_ca_cert_secret_name was already in the model context, so I'm assuming it might already exist.
    # If it DOESN'T exist and was also missed, add it here:
    # op.add_column(TABLE_NAME, sa.Column('tls_ca_cert_secret_name', sa.String(length=512), nullable=True, comment="Optional: Secret Manager resource name for a custom CA certificate (PEM) to verify the STOW-RS server."))

    # If you had old columns named 'username_secret_name' and 'password_secret_name' 
    # specifically for StowRs (and they weren't shared or used by other types),
    # you might consider dropping them or renaming them if they are being replaced.
    # Example (use with caution, ensure these columns are truly obsolete for StowRs):
    # op.drop_column(TABLE_NAME, 'username_secret_name')
    # op.drop_column(TABLE_NAME, 'password_secret_name')
    
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column(TABLE_NAME, 'api_key_header_name_override')
    op.drop_column(TABLE_NAME, 'api_key_secret_name')
    op.drop_column(TABLE_NAME, 'bearer_token_secret_name')
    op.drop_column(TABLE_NAME, 'basic_auth_password_secret_name')
    op.drop_column(TABLE_NAME, 'basic_auth_username_secret_name')
    op.drop_column(TABLE_NAME, 'auth_type')

    # If you added tls_ca_cert_secret_name in upgrade, drop it here:
    # op.drop_column(TABLE_NAME, 'tls_ca_cert_secret_name')

    # If you dropped old columns in upgrade, you might want to add them back in downgrade
    # (again, only if they were specific and you want to revert perfectly).
    # Example:
    # op.add_column(TABLE_NAME, sa.Column('password_secret_name', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    # op.add_column(TABLE_NAME, sa.Column('username_secret_name', sa.VARCHAR(length=512), autoincrement=False, nullable=True))
    # ### end Alembic commands ###
