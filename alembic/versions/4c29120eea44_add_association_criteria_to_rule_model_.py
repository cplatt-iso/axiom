"""Add association_criteria to Rule model and fix circular import

Revision ID: 4c29120eea44
Revises: 7c0e2c7d380e
Create Date: 2025-04-25 14:27:03.406851

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '4c29120eea44'
down_revision: Union[str, None] = '7c0e2c7d380e'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.add_column(sa.Column('association_criteria', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment='Optional list of criteria based on association details (Calling AE, IP).'))
        batch_op.alter_column('applicable_sources',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='List of source identifiers. Applies to all if null/empty.',
               existing_comment="List of source identifiers (e.g., 'scp_listener_a', 'api_json'). Applies to all if null/empty.",
               existing_nullable=True)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.alter_column('applicable_sources',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment="List of source identifiers (e.g., 'scp_listener_a', 'api_json'). Applies to all if null/empty.",
               existing_comment='List of source identifiers. Applies to all if null/empty.',
               existing_nullable=True)
        batch_op.drop_column('association_criteria')

    # ### end Alembic commands ###
