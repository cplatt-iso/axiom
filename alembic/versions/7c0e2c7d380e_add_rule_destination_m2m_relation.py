"""add_rule_destination_m2m_relation and create storage_backend_configs

Revision ID: 7c0e2c7d380e
Revises: b812449db4a4
Create Date: 2025-04-24 20:42:34.769931

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '7c0e2c7d380e'
down_revision: Union[str, None] = 'b812449db4a4' # Keep dependency on the (empty) previous one
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### Manually Added: Create storage_backend_configs table ###
    op.create_table('storage_backend_configs',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=True),
        sa.Column('backend_type', sa.String(length=50), nullable=False),
        # Use postgresql.JSONB if your DB is Postgres, otherwise use sa.JSON
        sa.Column('config', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'{}'::jsonb"), nullable=False, comment='JSON object containing backend-specific settings (path, AE title, bucket, etc.).'),
        sa.Column('is_enabled', sa.Boolean(), server_default=sa.text('true'), nullable=False),
        sa.PrimaryKeyConstraint('id', name=op.f('pk_storage_backend_configs')),
        comment='Database model to store configurations for various storage backends'
    )
    op.create_index(op.f('ix_storage_backend_configs_backend_type'), 'storage_backend_configs', ['backend_type'], unique=False)
    op.create_index(op.f('ix_storage_backend_configs_created_at'), 'storage_backend_configs', ['created_at'], unique=False)
    op.create_index(op.f('ix_storage_backend_configs_is_enabled'), 'storage_backend_configs', ['is_enabled'], unique=False)
    op.create_index(op.f('ix_storage_backend_configs_name'), 'storage_backend_configs', ['name'], unique=True)
    op.create_index(op.f('ix_storage_backend_configs_updated_at'), 'storage_backend_configs', ['updated_at'], unique=False)
    # ### End Manually Added ###

    # ### Manually Added: Create rule_destination_association table ###
    op.create_table('rule_destination_association',
        sa.Column('rule_id', sa.Integer(), nullable=False),
        sa.Column('storage_backend_config_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['rule_id'], ['rules.id'], name=op.f('fk_rule_destination_association_rule_id_rules'), ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['storage_backend_config_id'], ['storage_backend_configs.id'], name=op.f('fk_rule_destination_association_storage_backend_config_id_storage_backend_configs'), ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('rule_id', 'storage_backend_config_id', name=op.f('pk_rule_destination_association'))
    )
    # ### End Manually Added ###

    # ### commands auto generated by Alembic - adjusted ###
    # Drop the old column AFTER creating the new tables/relationships
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.drop_column('destinations')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - adjusted ###
    # Add the column back BEFORE dropping the association/backend tables
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.add_column(sa.Column('destinations', postgresql.JSONB(astext_type=sa.Text()), server_default=sa.text("'[]'::jsonb"), autoincrement=False, nullable=False, comment='List of storage destination objects (validated by Pydantic)'))
    # ### end Alembic commands ###

    # ### Manually Added: Drop tables in reverse order ###
    op.drop_table('rule_destination_association')
    op.drop_table('storage_backend_configs')
    # ### End Manually Added ###

