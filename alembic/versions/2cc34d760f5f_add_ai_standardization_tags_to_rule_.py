"""Add ai_standardization_tags to Rule model

Revision ID: 2cc34d760f5f
Revises: 1221285d9942
Create Date: 2025-05-05 21:09:47.879731

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '2cc34d760f5f'
down_revision: Union[str, None] = '1221285d9942'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.add_column(sa.Column('ai_standardization_tags', postgresql.JSONB(astext_type=sa.Text()), nullable=True, comment="List of DICOM tags (keywords or 'GGGG,EEEE') to standardize using AI."))
        batch_op.alter_column('match_criteria',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='Criteria list (structure defined/validated by Pydantic schema)',
               existing_comment='Criteria object (structure defined/validated by Pydantic schema)',
               existing_nullable=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('rules', schema=None) as batch_op:
        batch_op.alter_column('match_criteria',
               existing_type=postgresql.JSONB(astext_type=sa.Text()),
               comment='Criteria object (structure defined/validated by Pydantic schema)',
               existing_comment='Criteria list (structure defined/validated by Pydantic schema)',
               existing_nullable=False)
        batch_op.drop_column('ai_standardization_tags')

    # ### end Alembic commands ###
