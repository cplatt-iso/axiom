"""add_weight_failover_retry_fields_to_spanner_mappings

Revision ID: 37cab1a457dd
Revises: a11c63999d7d
Create Date: 2025-08-12 23:52:33.313878

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '37cab1a457dd'
down_revision: Union[str, None] = 'a11c63999d7d'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('spanner_source_mappings', schema=None) as batch_op:
        batch_op.add_column(sa.Column('weight', sa.Integer(), nullable=False, server_default='1', comment='Weight for load balancing (higher = more queries)'))
        batch_op.add_column(sa.Column('enable_failover', sa.Boolean(), server_default=sa.text('true'), nullable=False, comment='Whether to use this source as failover if others fail'))
        batch_op.add_column(sa.Column('max_retries', sa.Integer(), nullable=False, server_default='3', comment='Maximum number of retry attempts for this source'))
        batch_op.add_column(sa.Column('retry_delay_seconds', sa.Integer(), nullable=False, server_default='5', comment='Delay between retry attempts in seconds'))
        batch_op.alter_column('source_type',
               existing_type=sa.VARCHAR(length=20),
               comment='Type of source: dimse-qr, dicomweb, google_healthcare',
               existing_nullable=False,
               existing_server_default=sa.text("'dimse-qr'::character varying"))
        batch_op.alter_column('dimse_qr_source_id',
               existing_type=sa.INTEGER(),
               comment='Reference to DIMSE Q/R source (if source_type is dimse-qr)',
               existing_comment='Reference to the DIMSE Q/R source',
               existing_nullable=True)
        batch_op.alter_column('dicomweb_source_id',
               existing_type=sa.INTEGER(),
               comment='Reference to DICOMweb source (if source_type is dicomweb)',
               existing_nullable=True)
        batch_op.alter_column('google_healthcare_source_id',
               existing_type=sa.INTEGER(),
               comment='Reference to Google Healthcare source (if source_type is google_healthcare)',
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_spanner_source_mappings_dimse_qr_source_id'), ['dimse_qr_source_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('spanner_source_mappings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_spanner_source_mappings_dimse_qr_source_id'))
        batch_op.alter_column('google_healthcare_source_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Reference to Google Healthcare source (if source_type is google_healthcare)',
               existing_nullable=True)
        batch_op.alter_column('dicomweb_source_id',
               existing_type=sa.INTEGER(),
               comment=None,
               existing_comment='Reference to DICOMweb source (if source_type is dicomweb)',
               existing_nullable=True)
        batch_op.alter_column('dimse_qr_source_id',
               existing_type=sa.INTEGER(),
               comment='Reference to the DIMSE Q/R source',
               existing_comment='Reference to DIMSE Q/R source (if source_type is dimse-qr)',
               existing_nullable=True)
        batch_op.alter_column('source_type',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='Type of source: dimse-qr, dicomweb, google_healthcare',
               existing_nullable=False,
               existing_server_default=sa.text("'dimse-qr'::character varying"))
        batch_op.drop_column('retry_delay_seconds')
        batch_op.drop_column('max_retries')
        batch_op.drop_column('enable_failover')
        batch_op.drop_column('weight')

    # ### end Alembic commands ###
