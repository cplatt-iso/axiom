"""update_processed_study_log_for_listener

Revision ID: 488c7aa1abc4
Revises: 6985f7ce04bd
Create Date: 2025-04-24 15:34:32.866148

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '488c7aa1abc4'
down_revision: Union[str, None] = '6985f7ce04bd'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('processed_study_log', schema=None) as batch_op:
        batch_op.alter_column('source_type',
               existing_type=postgresql.ENUM('DICOMWEB', 'DIMSE_QR', name='processed_study_source_enum'),
               type_=sa.Enum('DICOMWEB', 'DIMSE_QR', 'DIMSE_LISTENER', name='processed_study_source_enum', native_enum=False),
               comment='Type of the source that initiated processing (DICOMWEB, DIMSE_QR, DIMSE_LISTENER).',
               existing_comment='Type of the source that initiated processing (DICOMWEB, DIMSE_QR).',
               existing_nullable=False)
        batch_op.alter_column('source_id',
               existing_type=sa.INTEGER(),
               type_=sa.String(length=255),
               comment='Identifier of the source config (int ID for DICOMweb/QR, string instance_id for Listener).',
               existing_comment='ID of the source configuration (in its respective table).',
               existing_nullable=False)
        batch_op.alter_column('retrieval_queued_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Timestamp when the retrieval/processing task was queued.',
               existing_comment='Timestamp when the retrieval task was queued.',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.create_index('ix_processed_study_log_source_id_str', ['source_id'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('processed_study_log', schema=None) as batch_op:
        batch_op.drop_index('ix_processed_study_log_source_id_str')
        batch_op.alter_column('retrieval_queued_at',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Timestamp when the retrieval task was queued.',
               existing_comment='Timestamp when the retrieval/processing task was queued.',
               existing_nullable=False,
               existing_server_default=sa.text('now()'))
        batch_op.alter_column('source_id',
               existing_type=sa.String(length=255),
               type_=sa.INTEGER(),
               comment='ID of the source configuration (in its respective table).',
               existing_comment='Identifier of the source config (int ID for DICOMweb/QR, string instance_id for Listener).',
               existing_nullable=False)
        batch_op.alter_column('source_type',
               existing_type=sa.Enum('DICOMWEB', 'DIMSE_QR', 'DIMSE_LISTENER', name='processed_study_source_enum', native_enum=False),
               type_=postgresql.ENUM('DICOMWEB', 'DIMSE_QR', name='processed_study_source_enum'),
               comment='Type of the source that initiated processing (DICOMWEB, DIMSE_QR).',
               existing_comment='Type of the source that initiated processing (DICOMWEB, DIMSE_QR, DIMSE_LISTENER).',
               existing_nullable=False)

    # ### end Alembic commands ###
