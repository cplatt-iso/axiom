"""add_spanner_tables_and_query_spanning

Revision ID: c26a7d312d44
Revises: 4dc50b2cbec1
Create Date: 2025-08-11 17:14:58.801287

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'c26a7d312d44'
down_revision: Union[str, None] = '4dc50b2cbec1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('dicomweb_source_state', schema=None) as batch_op:
        batch_op.alter_column('health_status',
               existing_type=sa.VARCHAR(length=20),
               comment='Current health status of the source (OK, DOWN, ERROR, UNKNOWN)',
               existing_nullable=False,
               existing_server_default=sa.text("'UNKNOWN'::character varying"))
        batch_op.alter_column('last_health_check',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Timestamp of the last health check attempt',
               existing_nullable=True)
        batch_op.alter_column('last_health_error',
               existing_type=sa.TEXT(),
               comment='Details of the last health check error, if any',
               existing_nullable=True)
        batch_op.drop_index('idx_dicomweb_source_health_status')
        batch_op.create_index(batch_op.f('ix_dicomweb_source_state_health_status'), ['health_status'], unique=False)

    with op.batch_alter_table('dimse_qr_sources', schema=None) as batch_op:
        batch_op.alter_column('health_status',
               existing_type=sa.VARCHAR(length=20),
               comment='Current health status of the source (OK, DOWN, ERROR, UNKNOWN)',
               existing_nullable=False,
               existing_server_default=sa.text("'UNKNOWN'::character varying"))
        batch_op.alter_column('last_health_check',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment='Timestamp of the last health check attempt',
               existing_nullable=True)
        batch_op.alter_column('last_health_error',
               existing_type=sa.TEXT(),
               comment='Details of the last health check error, if any',
               existing_nullable=True)
        batch_op.drop_index('idx_dimse_qr_source_health_status')
        batch_op.create_index(batch_op.f('ix_dimse_qr_sources_health_status'), ['health_status'], unique=False)

    with op.batch_alter_table('google_healthcare_sources', schema=None) as batch_op:
        batch_op.drop_index('idx_google_healthcare_source_health_status')
        batch_op.create_index(batch_op.f('ix_google_healthcare_sources_health_status'), ['health_status'], unique=False)

    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('google_healthcare_sources', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_google_healthcare_sources_health_status'))
        batch_op.create_index('idx_google_healthcare_source_health_status', ['health_status'], unique=False)

    with op.batch_alter_table('dimse_qr_sources', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dimse_qr_sources_health_status'))
        batch_op.create_index('idx_dimse_qr_source_health_status', ['health_status'], unique=False)
        batch_op.alter_column('last_health_error',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Details of the last health check error, if any',
               existing_nullable=True)
        batch_op.alter_column('last_health_check',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp of the last health check attempt',
               existing_nullable=True)
        batch_op.alter_column('health_status',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='Current health status of the source (OK, DOWN, ERROR, UNKNOWN)',
               existing_nullable=False,
               existing_server_default=sa.text("'UNKNOWN'::character varying"))

    with op.batch_alter_table('dicomweb_source_state', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_dicomweb_source_state_health_status'))
        batch_op.create_index('idx_dicomweb_source_health_status', ['health_status'], unique=False)
        batch_op.alter_column('last_health_error',
               existing_type=sa.TEXT(),
               comment=None,
               existing_comment='Details of the last health check error, if any',
               existing_nullable=True)
        batch_op.alter_column('last_health_check',
               existing_type=postgresql.TIMESTAMP(timezone=True),
               comment=None,
               existing_comment='Timestamp of the last health check attempt',
               existing_nullable=True)
        batch_op.alter_column('health_status',
               existing_type=sa.VARCHAR(length=20),
               comment=None,
               existing_comment='Current health status of the source (OK, DOWN, ERROR, UNKNOWN)',
               existing_nullable=False,
               existing_server_default=sa.text("'UNKNOWN'::character varying"))

    # ### end Alembic commands ###
