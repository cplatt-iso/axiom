# requirements.txt

# Core Web Framework
fastapi
uvicorn[standard] # ASGI server

# Settings Management
pydantic
pydantic-settings

# Database ORM & Driver
sqlalchemy[asyncio] # Add asyncio extras for potential async DB operations later
psycopg[binary] # PostgreSQL driver (binary version is easier)

# DICOM
pydicom
pynetdicom

# DICOM Compression Libraries
pylibjpeg # For various JPEG types (Baseline, Extended, Lossless P14)
pylibjpeg-rle # For RLE Lossless
pillow # For JPEG 2000 support (used by pylibjpeg)
# python-gdcm # Alternative, powerful C++ library (requires specific installation)
# pydicom[jpeg_ls] # Or install pydicom with optional extras (might pull pylibjpeg/jpeg_ls)
# Note: Check specific versions/compatibility if issues arise

# To directly install jpeg_ls C library if needed (check pylibjpeg docs)
# jpeg_ls # Usually handled via system packages or wheels now

# Task Queue
celery[redis, librabbitmq] # Include extras for Redis result backend & efficient RabbitMQ comms
# flower # Optional: Celery monitoring UI

# Cloud Storage (Optional - Google Cloud initially)
google-cloud-storage

# Utilities
python-dotenv # To load .env files for local dev (handled by pydantic-settings now, but good practice)
python-multipart # For form data/file uploads in FastAPI

# Add other dependencies as needed (e.g., requests/httpx for API PUTs, security libraries)
# celery[redis, librabbitmq] 
celery[librabbitmq] # if no redis backend needed
