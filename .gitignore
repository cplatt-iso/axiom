# Environment Variables
.env
.env.*
!.env.example

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
# Usually dist/ but keep the rule explicit if you are using PyInstaller
# *.manifest
# *.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
.pytest_cache/
pytestdebug.log
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/

# Type checker cache / output
.mypy_cache/
.dmypy.json
dmypy.json
.pytype/

# profiling data
*.prof
*.pstat

# Instance Folder (Flask pattern, maybe relevant if using blueprints similarly)
# instance/

# --- Node.js / Frontend Dependencies & Build ---
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-intermediate-files)
.grunt

# Bower dependency directory (less common now)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# Snowpack dependency directory (https://snowpack.dev/)
web_modules/

# TypeScript cache file
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional stylelint cache
.stylelintcache

# Microbundle cache
.rpt2_cache/
.rts2_cache_cjs/
.rts2_cache_es/
.rts2_cache_umd/

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env.development.local
.env.test.local
.env.production.local
.env.local

# Remix files
.cache/
build/
public/build/

# Parcel cache files
.parcel-cache/

# Next.js build output
.next/
out/

# Nuxt.js build output
.nuxt/
dist/

# Vue CLI build output
dist/

# SvelteKit build output
.svelte-kit/

# Standard frontend build directory (React CRA, Vite, etc.)
build/
dist/         # Redundant? Keep for clarity.

# Docusaurus build output
.docusaurus/

# Gatsby files
.cache/
# Comment in the public line in if your project uses Gatsby and not Remix
# public

# Gatsby crash logs
public/page-data/
.cache/redux/


# --- IDE / Editor Files ---
# VS Code
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
*.code-workspace

# JetBrains IDEs (PyCharm, WebStorm, etc)
.idea/

# Sublime Text
*.sublime-project
*.sublime-workspace

# Atom
.atom/

# Eclipse
.project
.classpath
.settings/

# Netbeans
nbproject/

# --- Docker ---
# Avoid committing potentially large volume data if stored locally
# (Keep these commented unless you store runtime volume data inside the project dir)
postgres_data/
rabbitmq_data/
dicom_incoming/
dicom_processed/
dicom_errors/

# --- OS Specific files ---
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
venv/
orthanc/
