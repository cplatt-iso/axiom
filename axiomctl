#!/bin/bash
# axiomctl: Wrapper for modular Docker Compose setup

# Compose files to include
COMPOSE_FILES=(-f core.yml -f docker/app.yml -f docker/docs.yml -f docker/logging.yml)

# Add all listener YAMLs
for f in docker/listeners/*.yml; do
  COMPOSE_FILES+=( -f "$f" )
done

# Add all sender YAMLs
for f in docker/senders/*.yml; do
  COMPOSE_FILES+=( -f "$f" )
done

# Add all worker YAMLs  
for f in docker/workers/*.yml; do
  COMPOSE_FILES+=( -f "$f" )
done

# Add spanner core services if they exist
if [ -f "docker/spanner/spanner-core.yml" ]; then
  COMPOSE_FILES+=( -f "docker/spanner/spanner-core.yml" )
fi

# Add all spanner listener YAMLs
for f in docker/spanner/listeners/*.yml; do
  if [ -f "$f" ]; then
    COMPOSE_FILES+=( -f "$f" )
  fi
done

# Special handling for 'up -d' to ensure proper startup order
if [[ "$1" == "up" && ("$2" == "-d" || "$2" == "--detach") ]]; then
  echo "Starting logging infrastructure first..."
  docker compose "${COMPOSE_FILES[@]}" up -d elasticsearch fluent-bit
  
  echo "Waiting for Fluent Bit to be ready..."
  while ! nc -z localhost 24224; do   
    sleep 0.5 # wait for 1/2 a second before check again
  done
  echo "Fluent Bit is up and running."
  
  echo "Starting remaining services..."
  docker compose "${COMPOSE_FILES[@]}" "$@"
else
  # Pass all arguments to docker compose for all other commands
  exec docker compose "${COMPOSE_FILES[@]}" "$@"
fi