
# /home/icculus/axiom/backend/docker-compose.yml
# --- Main Axiom Application Stack ---

services:
  db:
    image: postgres:15-alpine
    container_name: dicom_processor_db
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-dicom_processor_user}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-changeme}
      POSTGRES_DB: ${POSTGRES_DB:-dicom_processor_db}
    ports:
      - "${POSTGRES_PORT:-5432}:5432"
    healthcheck:
        test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-dicom_processor_user} -d ${POSTGRES_DB:-dicom_processor_db}"]
        interval: 5s
        timeout: 5s
        retries: 5
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.postgres.{{.Name}}"
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"

  rabbitmq:
    build:
      context: .
      dockerfile: Dockerfile.rabbitmq
    container_name: dicom_processor_rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_USER:-guest}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_PASSWORD:-guest}
    ports:
      - "${RABBITMQ_PORT:-5672}:5672"
      - "15672:15672"
    healthcheck:
        test: ["CMD", "rabbitmq-diagnostics", "-q", "check_port_connectivity"]
        interval: 10s
        timeout: 5s
        retries: 10
        start_period: 10s
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq/
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.rabbitmq.${AXIOM_INSTANCE_ID:-unknown}.{{.Name}}"

  redis:
    image: redis:7-alpine
    container_name: dicom_processor_redis
    command: redis-server --save 60 1 --loglevel warning
    volumes:
      - redis_data:/data
    healthcheck:
        test: ["CMD", "redis-cli", "ping"]
        interval: 5s
        timeout: 3s
        retries: 5
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.redis.{{.Name}}"

  api:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: dicom_processor_api
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/gcp/axiom-flow-gcs-key.json
      - PYTHONPATH=/app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
    ports:
      - "8001:80"
    volumes:
      - ./app:/app/app
      - ./alembic.ini:/app/alembic.ini
      - ./pytest.ini:/app/pytest.ini
      - ./alembic:/app/alembic
      - ./seed_dcm4che_listener.py:/app/seed_dcm4che_listener.py
      - dicom_incoming:/dicom_data/incoming:ro
      - dicom_processed:/dicom_data/processed:ro
      - dicom_errors:/dicom_data/errors:ro
      - ./axiom-flow-gcs-key.json:/etc/gcp/axiom-flow-gcs-key.json:ro
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "80", "--reload", "--proxy-headers", "--forwarded-allow-ips='*'"]
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.api.{{.Name}}"

  beat:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: dicom_processor_beat
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/gcp/axiom-flow-gcs-key.json
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
         condition: service_healthy
    volumes:
      - ./axiom-flow-gcs-key.json:/etc/gcp/axiom-flow-gcs-key.json:ro
    command: ["celery", "-A", "app.worker.celery_app.app", "beat", "--loglevel=info"]
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.beat.{{.Name}}"

  worker:
    build:
      context: .
      dockerfile: Dockerfile.worker
    container_name: dicom_processor_worker
    env_file:
      - .env
    environment:
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/gcp/axiom-flow-gcs-key.json
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
      redis:
        condition: service_healthy
    volumes:
      - dicom_incoming:/dicom_data/incoming
      - dicom_processed:/dicom_data/processed
      - /home/icculus/axiom/axiom-volumes/dicom_errors:/dicom_data/errors
      - ./axiom-flow-gcs-key.json:/etc/gcp/axiom-flow-gcs-key.json:ro
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.worker.{{.Name}}"

  listener:
    build:
      context: .
      dockerfile: Dockerfile.listener
    container_name: dicom_processor_listener
    env_file:
      - .env
    environment:
      - AXIOM_INSTANCE_ID=storescp_1
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/gcp/axiom-flow-gcs-key.json
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "11112:11112/tcp"
    volumes:
      - ./app:/app/app
      - dicom_incoming:/dicom_data/incoming
      - ./axiom-flow-gcs-key.json:/etc/gcp/axiom-flow-gcs-key.json:ro
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.listener.${AXIOM_INSTANCE_ID:-unknown}.{{.Name}}"

  listener_2:
    build:
      context: .
      dockerfile: Dockerfile.listener
    container_name: dicom_processor_listener_2
    env_file:
      - .env
    environment:
      - AXIOM_INSTANCE_ID=storescp_2
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/gcp/axiom-flow-gcs-key.json
    depends_on:
      rabbitmq:
        condition: service_healthy
      redis:
        condition: service_healthy
      db:
        condition: service_healthy
    ports:
      - "11113:11113/tcp"
    volumes:
      - ./app:/app/app
      - dicom_incoming:/dicom_data/incoming
      - ./axiom-flow-gcs-key.json:/etc/gcp/axiom-flow-gcs-key.json:ro
    restart: unless-stopped
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.listener.${AXIOM_INSTANCE_ID:-unknown}.{{.Name}}"

  mllp-listener:
    build:
      context: .
      dockerfile: Dockerfile
    command: python -u -m app.services.mllp_listener
    container_name: axiom-mllp-listener
    ports:
      - "2575:2575"
    volumes:
      - .:/app
    env_file:
      - .env
    depends_on:
      - db
      - redis
      - rabbitmq
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        max-buffer-size: "10m"
        fluentd-retry-wait: "1s"
        fluentd-max-retries: "60"
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.mllp_listener.{{.Name}}"

  dcm4che-listener:
    build:
      context: .
      dockerfile: Dockerfile.dcm4che-listener
    container_name: dicom_processor_dcm4che_listener
    env_file:
      - .env
    environment:
      - AXIOM_INSTANCE_ID=dcm4che_1
      - AXIOM_AETITLE=DCM4CHE
      - RABBITMQ_HOST=rabbitmq
      - RABBITMQ_USER=${RABBITMQ_USER:-guest}
      - RABBITMQ_PASSWORD=${RABBITMQ_PASSWORD:-guest}
      - RABBITMQ_QUEUE=default
      - PYTHONPATH=/app
    ports:
      - "11114:11114"
    depends_on:
      rabbitmq:
        condition: service_healthy
      db:
        condition: service_healthy
    volumes:
      - dicom_incoming:/dicom_data/incoming
      - ./scripts/watch_and_notify.py:/app/scripts/watch_and_notify.py:ro
    command: ["/bin/bash", "-c", "/opt/dcm4che/bin/storescp -b ${AXIOM_AETITLE:-DCM4CHE}:11114 --directory /dicom_data/incoming & python /app/scripts/watch_and_notify.py"]
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.dcm4che-listener.${AXIOM_INSTANCE_ID:-unknown}.{{.Name}}"

  docs:
    build:
      context: .
      dockerfile: Dockerfile.docs
    container_name: axiom_docs
    ports:
      - "8000:80"
    depends_on:
      - api
    networks:
      - default
      - shared
    restart: unless-stopped
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.docs.{{.Name}}"

  dcm4che-sender:
    build:
      context: .
      dockerfile: docker/dockerfiles/Dockerfile.dcm4che-sender
    container_name: dicom_processor_dcm4che_sender
    env_file:
      - .env
    environment:
      - RABBITMQ_HOST=rabbitmq
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - dicom_processed:/dicom_data/processed:ro
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.dcm4che-sender.{{.Name}}"

  pynetdicom-sender:
    build:
      context: .
      dockerfile: docker/dockerfiles/Dockerfile.pynetdicom-sender
    container_name: dicom_processor_pynetdicom_sender
    env_file:
      - .env
    environment:
      - RABBITMQ_HOST=rabbitmq
      - GOOGLE_APPLICATION_CREDENTIALS=/etc/gcp/axiom-flow-gcs-key.json
    depends_on:
      rabbitmq:
        condition: service_healthy
    volumes:
      - dicom_processed:/dicom_data/processed:ro
      - ./axiom-flow-gcs-key.json:/etc/gcp/axiom-flow-gcs-key.json:ro
    restart: unless-stopped
    networks:
      - default
      - shared
    logging:
      driver: "fluentd"
      options:
        mode: non-blocking
        fluentd-address: "127.0.0.1:24224"
        tag: "axiom.pynetdicom-sender.{{.Name}}"

# --- Volumes ---
volumes:
  postgres_data:
  rabbitmq_data:
  dicom_incoming:
  dicom_processed:
  dicom_errors:
  redis_data:

# --- Networks ---
networks:
  default:
    driver: bridge
  shared:
    external: true
    name: axiom_shared_network
